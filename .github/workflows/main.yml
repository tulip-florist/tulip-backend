name: Build and push docker image to Docker Hub & Deploy to EB

on:
  push:
    branches: [master]

  workflow_dispatch:
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      PORT: 8080
      JWT_SECRET: ${{ secrets.JWT_TESTING_SECRET }}
      LOG_LEVEL_FILE: info
      LOG_LEVEL_CONSOLE: debug
      SENTRY_DNS: ${{ secrets.SENTRY_DNS }}
      CANARY1_EMAIL: ${{ secrets.CANARY1_EMAIL }}
      CANARY2_EMAIL: ${{ secrets.CANARY2_EMAIL }}

    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Npm CI
        run: |
          npm ci

      - name: Npm Test
        run: |
          npm run test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tulip-backend:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Get Timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run String Replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: "-"
          flags: "g"

      - name: Generate Deployment Package
        run: zip -r deploy.zip * -x "**node_modules**"

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: tulip-backend
          environment_name: Tulipbackend-env
          version_label: "docker-app-${{ steps.format-time.outputs.replaced }}"
          region: eu-central-1
          deployment_package: deploy.zip
